#graph dfs
from collections import defaultdict

class Graph:
  def __init__(self):
    self.graph = defaultdict(list)

  def addEdge(self, u, v):
    self.graph[u].append(v)
  
  def findDFS(self, start, visited):
    visited[start] = True
    print(start, end = " ")
    for vertex in self.graph[start]:
      if visited[vertex] == False:
        visited[vertex] = True
        self.findDFS(vertex, visited)
  
  def dfs(self, start):
    visited = [False for i in range(len(self.graph))]
    self.findDFS(start, visited)

g = Graph()
g.addEdge(0,1)
g.addEdge(0,2)
g.addEdge(1,2)
g.addEdge(2,0)
g.addEdge(2,3)
g.addEdge(3,3)

g.dfs(2)
